<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Beehive Hugo Theme</title>
    <link>https://vijayabharathib.github.io/beehive_hugo_theme/tags/development/</link>
    <description>Recent content in Development on Beehive Hugo Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Jun 2017 22:16:06 +0530</lastBuildDate>
    
	<atom:link href="https://vijayabharathib.github.io/beehive_hugo_theme/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo template primer - Part 1</title>
      <link>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part1/</link>
      <pubDate>Fri, 16 Jun 2017 22:16:06 +0530</pubDate>
      
      <guid>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part1/</guid>
      <description>Hugo uses the excellent [go][] [html/template][gohtmltemplate] library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Hugo template primer - Part 1</title>
      <link>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part2/</link>
      <pubDate>Fri, 16 Jun 2017 22:16:06 +0530</pubDate>
      
      <guid>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part2/</guid>
      <description>Functions Go template ship with a few functions which provide basic functionality. The go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.
Example:
{{ add 1 2 }}  Includes When including another template you will pass to it the data it will be able to access.</description>
    </item>
    
    <item>
      <title>Hugo template primer - Part 3</title>
      <link>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part3/</link>
      <pubDate>Fri, 16 Jun 2017 22:16:06 +0530</pubDate>
      
      <guid>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part3/</guid>
      <description>Pipes One of the most powerful components of go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the input of the following pipe.
Because of the very simple syntax of go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.</description>
    </item>
    
    <item>
      <title>Hugo template primer - Part 4</title>
      <link>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part4/</link>
      <pubDate>Fri, 16 Jun 2017 22:16:06 +0530</pubDate>
      
      <guid>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part4/</guid>
      <description>Hugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.
Using Content (page) Parameters In each piece of content you can provide variables to be used by the templates.</description>
    </item>
    
    <item>
      <title>Hugo template primer - Part 5</title>
      <link>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part5/</link>
      <pubDate>Fri, 16 Jun 2017 22:16:06 +0530</pubDate>
      
      <guid>https://vijayabharathib.github.io/beehive_hugo_theme/post/hugo-template-primer-part5/</guid>
      <description>Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.
For instance, you might declare:
params: CopyrightHTML: &amp;quot;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;quot; TwitterUser: &amp;quot;spf13&amp;quot; SidebarRecentLimit: 5  Within a footer layout, you might then declare a &amp;lt;footer&amp;gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again.</description>
    </item>
    
  </channel>
</rss>